version: 2.1

parameters:
  dry_run:
    type: boolean
    default: true
    description: "run in dry run ?"
  gio_action:
    type: enum
    enum: [changelog_am, blank]
    default: blank
  gio_milestone_version:
    type: string
    default: $GIO_MILESTONE_VERSION
    description: "The Gravitee.io Milestone version https://github.com/gravitee-io/issues/milestones for which we want to generate Changelog"

orbs:
  keeper: gravitee-io/keeper@0.6.2
  gh: circleci/github-cli@2.1.0

jobs:
  empty_job:
    docker:
     - image: alpine
    resource_class: small
    working_directory: /mnt/ramdisk
    steps:
      - run:
          name: "This is a blank job"
          command: echo "No task is executed."

  changelog_am:
    docker:
      - image: groovy:jdk11
        user: root
    resource_class: small
    environment:
      MILESTONE_VERSION: << pipeline.parameters.gio_milestone_version >>
    steps:
      - checkout
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/field/login
          var-name: GIT_USER_NAME
      - keeper/env-export:
          secret-url: keeper://IZd-yvsMopfQEa_0j1SDvg/custom_field/email
          var-name: GIT_USER_EMAIL
      - keeper/env-export:
          secret-url: keeper://TIlcGPFq4rN5GvgnZb9hng/field/password
          var-name: GITHUB_TOKEN
      - add_ssh_keys:
          fingerprints:
            - "ac:88:23:8f:c6:0f:7d:f0:fc:df:73:20:34:56:02:6c"
      - run:
          name: Git config
          command: |
            apt-get -y update
            apt-get -y install git
            git config --global user.name "${GIT_USER_NAME}"
            git config --global user.email "${GIT_USER_EMAIL}"
      - gh/setup
      - run:
          name: "Clone AM & Generate Changelog for Gravitee.io AM"
          command: |
            # For details see https://circleci.com/docs/2.0/gh-bb-integration/#establishing-the-authenticity-of-an-ssh-host
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            # Add SSH Key
            export LOCAL_SSH_PRVIKEY="${HOME}/.ssh/id_rsa_ac88238fc60f7df0fcdf73203456026c"
            ssh-add -D
            ssh-add "${LOCAL_SSH_PRVIKEY}"

            export GIT_GRAVITEE_AM_REPO=$(mktemp -d -t "git_gravitee_am_repo-XXXXXXXXXX")
            git clone git@github.com:gravitee-io/graviteeio-access-management.git ${GIT_GRAVITEE_AM_REPO}

            cd ${GIT_GRAVITEE_AM_REPO}

            groovy -DMILESTONE_VERSION="$MILESTONE_VERSION" /root/project/.circleci/am/githubChangelogGenerator.groovy

            # Sanitize MILESTONE_VERSION
            MILESTONE_VERSION_SANITIZED=$(echo ${MILESTONE_VERSION} | sed -e 's/[^a-zA-Z0-9]//g')
            
            # Create a branch for the changelog PR
            git checkout -b "changelog_am_pr_${MILESTONE_VERSION_SANITIZED}"
            
            # Commit the changelog
            git add ./CHANGELOG*.adoc
            git commit -m "Generate changelog for version ${MILESTONE_VERSION}"
            
            # Push the branch and open a PR
            git push --set-upstream origin "changelog_am_pr_${MILESTONE_VERSION_SANITIZED}"
            gh pr create --title "Changelog for ${MILESTONE_VERSION}" --body "Generate changelog for version ${MILESTONE_VERSION}" --reviewer "@gravitee-io/am"

workflows:
  # Blank process invoked when git / pull requests events are triggered
  blank:
    when:
      equal: [ blank, << pipeline.parameters.gio_action >> ]
    jobs:
      - empty_job:
          context: cicd-orchestrator

  changelog_am:
    when:
      equal: [ changelog_am, << pipeline.parameters.gio_action >> ]
    jobs:
      - changelog_am:
          context: cicd-orchestrator
